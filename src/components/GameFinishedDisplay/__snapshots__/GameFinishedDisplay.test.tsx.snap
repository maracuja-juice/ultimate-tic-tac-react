// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GameFinished should match snapshot when circle wins 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <GameFinishedDisplay
    isGameFinished={true}
    winner={1}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <p
          style={
            Object {
              "fontSize": "3.5vmin",
            }
          }
        >
          <UNDEFINED>
            <OSymbol
              shouldAnimate={false}
              style={
                Object {
                  "fontSize": "4.5vmin",
                }
              }
            />
             wins!
          </UNDEFINED>
        </p>,
        <div
          className="center"
        >
          <Confetti
            active={true}
            config={
              Object {
                "decay": 0.97,
                "elementCount": 250,
                "spread": 360,
                "startVelocity": 35,
              }
            }
          />
        </div>,
      ],
      "className": "flex-middle",
      "style": Object {},
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <UNDEFINED>
            <OSymbol
              shouldAnimate={false}
              style={
                Object {
                  "fontSize": "4.5vmin",
                }
              }
            />
             wins!
          </UNDEFINED>,
          "style": Object {
            "fontSize": "3.5vmin",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <OSymbol
                shouldAnimate={false}
                style={
                  Object {
                    "fontSize": "4.5vmin",
                  }
                }
              />,
              " wins!",
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "shouldAnimate": false,
                "style": Object {
                  "fontSize": "4.5vmin",
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            " wins!",
          ],
          "type": Symbol(react.fragment),
        },
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Confetti
            active={true}
            config={
              Object {
                "decay": 0.97,
                "elementCount": 250,
                "spread": 360,
                "startVelocity": 35,
              }
            }
          />,
          "className": "center",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "active": true,
            "config": Object {
              "decay": 0.97,
              "elementCount": 250,
              "spread": 360,
              "startVelocity": 35,
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <p
            style={
              Object {
                "fontSize": "3.5vmin",
              }
            }
          >
            <UNDEFINED>
              <OSymbol
                shouldAnimate={false}
                style={
                  Object {
                    "fontSize": "4.5vmin",
                  }
                }
              />
               wins!
            </UNDEFINED>
          </p>,
          <div
            className="center"
          >
            <Confetti
              active={true}
              config={
                Object {
                  "decay": 0.97,
                  "elementCount": 250,
                  "spread": 360,
                  "startVelocity": 35,
                }
              }
            />
          </div>,
        ],
        "className": "flex-middle",
        "style": Object {},
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <UNDEFINED>
              <OSymbol
                shouldAnimate={false}
                style={
                  Object {
                    "fontSize": "4.5vmin",
                  }
                }
              />
               wins!
            </UNDEFINED>,
            "style": Object {
              "fontSize": "3.5vmin",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <OSymbol
                  shouldAnimate={false}
                  style={
                    Object {
                      "fontSize": "4.5vmin",
                    }
                  }
                />,
                " wins!",
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "shouldAnimate": false,
                  "style": Object {
                    "fontSize": "4.5vmin",
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              " wins!",
            ],
            "type": Symbol(react.fragment),
          },
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Confetti
              active={true}
              config={
                Object {
                  "decay": 0.97,
                  "elementCount": 250,
                  "spread": 360,
                  "startVelocity": 35,
                }
              }
            />,
            "className": "center",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "active": true,
              "config": Object {
                "decay": 0.97,
                "elementCount": 250,
                "spread": 360,
                "startVelocity": 35,
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`GameFinished should match snapshot when cross wins 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <GameFinishedDisplay
    isGameFinished={true}
    winner={0}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <p
          style={
            Object {
              "fontSize": "3.5vmin",
            }
          }
        >
          <UNDEFINED>
            <XSymbol
              shouldAnimate={false}
              style={
                Object {
                  "fontSize": "4.5vmin",
                }
              }
            />
             wins!
          </UNDEFINED>
        </p>,
        <div
          className="center"
        >
          <Confetti
            active={true}
            config={
              Object {
                "decay": 0.97,
                "elementCount": 250,
                "spread": 360,
                "startVelocity": 35,
              }
            }
          />
        </div>,
      ],
      "className": "flex-middle",
      "style": Object {},
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <UNDEFINED>
            <XSymbol
              shouldAnimate={false}
              style={
                Object {
                  "fontSize": "4.5vmin",
                }
              }
            />
             wins!
          </UNDEFINED>,
          "style": Object {
            "fontSize": "3.5vmin",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <XSymbol
                shouldAnimate={false}
                style={
                  Object {
                    "fontSize": "4.5vmin",
                  }
                }
              />,
              " wins!",
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "shouldAnimate": false,
                "style": Object {
                  "fontSize": "4.5vmin",
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            " wins!",
          ],
          "type": Symbol(react.fragment),
        },
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Confetti
            active={true}
            config={
              Object {
                "decay": 0.97,
                "elementCount": 250,
                "spread": 360,
                "startVelocity": 35,
              }
            }
          />,
          "className": "center",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "active": true,
            "config": Object {
              "decay": 0.97,
              "elementCount": 250,
              "spread": 360,
              "startVelocity": 35,
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <p
            style={
              Object {
                "fontSize": "3.5vmin",
              }
            }
          >
            <UNDEFINED>
              <XSymbol
                shouldAnimate={false}
                style={
                  Object {
                    "fontSize": "4.5vmin",
                  }
                }
              />
               wins!
            </UNDEFINED>
          </p>,
          <div
            className="center"
          >
            <Confetti
              active={true}
              config={
                Object {
                  "decay": 0.97,
                  "elementCount": 250,
                  "spread": 360,
                  "startVelocity": 35,
                }
              }
            />
          </div>,
        ],
        "className": "flex-middle",
        "style": Object {},
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <UNDEFINED>
              <XSymbol
                shouldAnimate={false}
                style={
                  Object {
                    "fontSize": "4.5vmin",
                  }
                }
              />
               wins!
            </UNDEFINED>,
            "style": Object {
              "fontSize": "3.5vmin",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <XSymbol
                  shouldAnimate={false}
                  style={
                    Object {
                      "fontSize": "4.5vmin",
                    }
                  }
                />,
                " wins!",
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "shouldAnimate": false,
                  "style": Object {
                    "fontSize": "4.5vmin",
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              " wins!",
            ],
            "type": Symbol(react.fragment),
          },
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Confetti
              active={true}
              config={
                Object {
                  "decay": 0.97,
                  "elementCount": 250,
                  "spread": 360,
                  "startVelocity": 35,
                }
              }
            />,
            "className": "center",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "active": true,
              "config": Object {
                "decay": 0.97,
                "elementCount": 250,
                "spread": 360,
                "startVelocity": 35,
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`GameFinished should match snapshot when draw 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <GameFinishedDisplay
    isGameFinished={true}
    winner={null}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <p
          style={
            Object {
              "fontSize": "3.5vmin",
            }
          }
        >
          It's a draw!
        </p>,
        <div
          className="center"
        >
          <Confetti
            active={true}
            config={
              Object {
                "decay": 0.97,
                "elementCount": 250,
                "spread": 360,
                "startVelocity": 35,
              }
            }
          />
        </div>,
      ],
      "className": "flex-middle",
      "style": Object {},
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "It's a draw!",
          "style": Object {
            "fontSize": "3.5vmin",
          },
        },
        "ref": null,
        "rendered": "It's a draw!",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Confetti
            active={true}
            config={
              Object {
                "decay": 0.97,
                "elementCount": 250,
                "spread": 360,
                "startVelocity": 35,
              }
            }
          />,
          "className": "center",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "active": true,
            "config": Object {
              "decay": 0.97,
              "elementCount": 250,
              "spread": 360,
              "startVelocity": 35,
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <p
            style={
              Object {
                "fontSize": "3.5vmin",
              }
            }
          >
            It's a draw!
          </p>,
          <div
            className="center"
          >
            <Confetti
              active={true}
              config={
                Object {
                  "decay": 0.97,
                  "elementCount": 250,
                  "spread": 360,
                  "startVelocity": 35,
                }
              }
            />
          </div>,
        ],
        "className": "flex-middle",
        "style": Object {},
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "It's a draw!",
            "style": Object {
              "fontSize": "3.5vmin",
            },
          },
          "ref": null,
          "rendered": "It's a draw!",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Confetti
              active={true}
              config={
                Object {
                  "decay": 0.97,
                  "elementCount": 250,
                  "spread": 360,
                  "startVelocity": 35,
                }
              }
            />,
            "className": "center",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "active": true,
              "config": Object {
                "decay": 0.97,
                "elementCount": 250,
                "spread": 360,
                "startVelocity": 35,
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`GameFinished should match snapshot when no one wins 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <GameFinishedDisplay
    isGameFinished={false}
    winner={null}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <p
          style={
            Object {
              "fontSize": "3.5vmin",
            }
          }
        >
          <UNDEFINED>
            <XSymbol
              shouldAnimate={false}
            />
            some text
          </UNDEFINED>
        </p>,
        <div
          className="center"
        >
          <Confetti
            active={false}
            config={
              Object {
                "decay": 0.97,
                "elementCount": 250,
                "spread": 360,
                "startVelocity": 35,
              }
            }
          />
        </div>,
      ],
      "className": "flex-middle",
      "style": Object {
        "visibility": "hidden",
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <UNDEFINED>
            <XSymbol
              shouldAnimate={false}
            />
            some text
          </UNDEFINED>,
          "style": Object {
            "fontSize": "3.5vmin",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <XSymbol
                shouldAnimate={false}
              />,
              "some text",
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "shouldAnimate": false,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "some text",
          ],
          "type": Symbol(react.fragment),
        },
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Confetti
            active={false}
            config={
              Object {
                "decay": 0.97,
                "elementCount": 250,
                "spread": 360,
                "startVelocity": 35,
              }
            }
          />,
          "className": "center",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "active": false,
            "config": Object {
              "decay": 0.97,
              "elementCount": 250,
              "spread": 360,
              "startVelocity": 35,
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <p
            style={
              Object {
                "fontSize": "3.5vmin",
              }
            }
          >
            <UNDEFINED>
              <XSymbol
                shouldAnimate={false}
              />
              some text
            </UNDEFINED>
          </p>,
          <div
            className="center"
          >
            <Confetti
              active={false}
              config={
                Object {
                  "decay": 0.97,
                  "elementCount": 250,
                  "spread": 360,
                  "startVelocity": 35,
                }
              }
            />
          </div>,
        ],
        "className": "flex-middle",
        "style": Object {
          "visibility": "hidden",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <UNDEFINED>
              <XSymbol
                shouldAnimate={false}
              />
              some text
            </UNDEFINED>,
            "style": Object {
              "fontSize": "3.5vmin",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <XSymbol
                  shouldAnimate={false}
                />,
                "some text",
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "shouldAnimate": false,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "some text",
            ],
            "type": Symbol(react.fragment),
          },
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Confetti
              active={false}
              config={
                Object {
                  "decay": 0.97,
                  "elementCount": 250,
                  "spread": 360,
                  "startVelocity": 35,
                }
              }
            />,
            "className": "center",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "active": false,
              "config": Object {
                "decay": 0.97,
                "elementCount": 250,
                "spread": 360,
                "startVelocity": 35,
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
