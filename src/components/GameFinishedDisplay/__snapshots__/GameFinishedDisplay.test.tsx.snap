// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GameFinished should match snapshot when circle wins 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <GameFinishedDisplay
    isGameFinished={true}
    onRestartGame={[Function]}
    winner={1}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <p
          className="winner-text"
>
          <Unknown>
                    <XSymbol
                              shouldAnimate={false}
                    />
                    reservation
          </Unknown>
</p>,
        <Button
          dense={true}
          onClick={[Function]}
          outlined={false}
          raised={true}
          unelevated={false}
>
          Play Again
</Button>,
      ],
      "className": "restart-alignment hidden",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Unknown>
            <XSymbol
                        shouldAnimate={false}
            />
            reservation
</Unknown>,
          "className": "winner-text",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <XSymbol
                shouldAnimate={false}
/>,
              "reservation",
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "shouldAnimate": false,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "reservation",
          ],
          "type": Symbol(react.fragment),
        },
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "Play Again",
          "dense": true,
          "onClick": [Function],
          "outlined": false,
          "raised": true,
          "unelevated": false,
        },
        "ref": null,
        "rendered": "Play Again",
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <p
            className="winner-text"
>
            <Unknown>
                        <XSymbol
                                    shouldAnimate={false}
                        />
                        reservation
            </Unknown>
</p>,
          <Button
            dense={true}
            onClick={[Function]}
            outlined={false}
            raised={true}
            unelevated={false}
>
            Play Again
</Button>,
        ],
        "className": "restart-alignment hidden",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Unknown>
              <XSymbol
                            shouldAnimate={false}
              />
              reservation
</Unknown>,
            "className": "winner-text",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <XSymbol
                  shouldAnimate={false}
/>,
                "reservation",
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "shouldAnimate": false,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "reservation",
            ],
            "type": Symbol(react.fragment),
          },
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Play Again",
            "dense": true,
            "onClick": [Function],
            "outlined": false,
            "raised": true,
            "unelevated": false,
          },
          "ref": null,
          "rendered": "Play Again",
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": true,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`GameFinished should match snapshot when cross wins 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <GameFinishedDisplay
    isGameFinished={true}
    onRestartGame={[Function]}
    winner={0}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <p
          className="winner-text"
>
          <Unknown>
                    <XSymbol
                              shouldAnimate={false}
                    />
                    reservation
          </Unknown>
</p>,
        <Button
          dense={true}
          onClick={[Function]}
          outlined={false}
          raised={true}
          unelevated={false}
>
          Play Again
</Button>,
      ],
      "className": "restart-alignment hidden",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Unknown>
            <XSymbol
                        shouldAnimate={false}
            />
            reservation
</Unknown>,
          "className": "winner-text",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <XSymbol
                shouldAnimate={false}
/>,
              "reservation",
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "shouldAnimate": false,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "reservation",
          ],
          "type": Symbol(react.fragment),
        },
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "Play Again",
          "dense": true,
          "onClick": [Function],
          "outlined": false,
          "raised": true,
          "unelevated": false,
        },
        "ref": null,
        "rendered": "Play Again",
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <p
            className="winner-text"
>
            <Unknown>
                        <XSymbol
                                    shouldAnimate={false}
                        />
                        reservation
            </Unknown>
</p>,
          <Button
            dense={true}
            onClick={[Function]}
            outlined={false}
            raised={true}
            unelevated={false}
>
            Play Again
</Button>,
        ],
        "className": "restart-alignment hidden",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Unknown>
              <XSymbol
                            shouldAnimate={false}
              />
              reservation
</Unknown>,
            "className": "winner-text",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <XSymbol
                  shouldAnimate={false}
/>,
                "reservation",
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "shouldAnimate": false,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "reservation",
            ],
            "type": Symbol(react.fragment),
          },
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Play Again",
            "dense": true,
            "onClick": [Function],
            "outlined": false,
            "raised": true,
            "unelevated": false,
          },
          "ref": null,
          "rendered": "Play Again",
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": true,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`GameFinished should match snapshot when draw 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <GameFinishedDisplay
    isGameFinished={true}
    onRestartGame={[Function]}
    winner={null}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <p
          className="winner-text"
>
          <Unknown>
                    <XSymbol
                              shouldAnimate={false}
                    />
                    reservation
          </Unknown>
</p>,
        <Button
          dense={true}
          onClick={[Function]}
          outlined={false}
          raised={true}
          unelevated={false}
>
          Play Again
</Button>,
      ],
      "className": "restart-alignment hidden",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Unknown>
            <XSymbol
                        shouldAnimate={false}
            />
            reservation
</Unknown>,
          "className": "winner-text",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <XSymbol
                shouldAnimate={false}
/>,
              "reservation",
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "shouldAnimate": false,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "reservation",
          ],
          "type": Symbol(react.fragment),
        },
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "Play Again",
          "dense": true,
          "onClick": [Function],
          "outlined": false,
          "raised": true,
          "unelevated": false,
        },
        "ref": null,
        "rendered": "Play Again",
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <p
            className="winner-text"
>
            <Unknown>
                        <XSymbol
                                    shouldAnimate={false}
                        />
                        reservation
            </Unknown>
</p>,
          <Button
            dense={true}
            onClick={[Function]}
            outlined={false}
            raised={true}
            unelevated={false}
>
            Play Again
</Button>,
        ],
        "className": "restart-alignment hidden",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Unknown>
              <XSymbol
                            shouldAnimate={false}
              />
              reservation
</Unknown>,
            "className": "winner-text",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <XSymbol
                  shouldAnimate={false}
/>,
                "reservation",
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "shouldAnimate": false,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "reservation",
            ],
            "type": Symbol(react.fragment),
          },
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Play Again",
            "dense": true,
            "onClick": [Function],
            "outlined": false,
            "raised": true,
            "unelevated": false,
          },
          "ref": null,
          "rendered": "Play Again",
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": true,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`GameFinished should match snapshot when no one wins 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <GameFinishedDisplay
    isGameFinished={false}
    onRestartGame={[Function]}
    winner={null}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <p
          className="winner-text"
>
          <Unknown>
                    <XSymbol
                              shouldAnimate={false}
                    />
                    reservation
          </Unknown>
</p>,
        <Button
          dense={true}
          onClick={[Function]}
          outlined={false}
          raised={true}
          unelevated={false}
>
          Play Again
</Button>,
      ],
      "className": "restart-alignment hidden",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Unknown>
            <XSymbol
                        shouldAnimate={false}
            />
            reservation
</Unknown>,
          "className": "winner-text",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <XSymbol
                shouldAnimate={false}
/>,
              "reservation",
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "shouldAnimate": false,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "reservation",
          ],
          "type": Symbol(react.fragment),
        },
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "Play Again",
          "dense": true,
          "onClick": [Function],
          "outlined": false,
          "raised": true,
          "unelevated": false,
        },
        "ref": null,
        "rendered": "Play Again",
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <p
            className="winner-text"
>
            <Unknown>
                        <XSymbol
                                    shouldAnimate={false}
                        />
                        reservation
            </Unknown>
</p>,
          <Button
            dense={true}
            onClick={[Function]}
            outlined={false}
            raised={true}
            unelevated={false}
>
            Play Again
</Button>,
        ],
        "className": "restart-alignment hidden",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Unknown>
              <XSymbol
                            shouldAnimate={false}
              />
              reservation
</Unknown>,
            "className": "winner-text",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <XSymbol
                  shouldAnimate={false}
/>,
                "reservation",
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "shouldAnimate": false,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "reservation",
            ],
            "type": Symbol(react.fragment),
          },
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "Play Again",
            "dense": true,
            "onClick": [Function],
            "outlined": false,
            "raised": true,
            "unelevated": false,
          },
          "ref": null,
          "rendered": "Play Again",
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": true,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
